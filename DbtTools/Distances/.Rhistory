install.packages("RcppArmadillo")
detach("package:utils", unload=TRUE)
detach("package:stats", unload=TRUE)
detach("package:datasets", unload=TRUE)
remove.packages("RcppArmadillo")
install.packages("~/Downloads/RcppArmadillo_0.8.500.0.tar.gz", repos = NULL, type = "source")
install.packages("~/Downloads/RcppArmadillo_0.8.500.0.tar.gz", repos = NULL, type = "source")
version()
R.Version()
install.packages("~/Downloads/RcppArmadillo_0.8.500.0.tar.gz", repos = NULL, type = "source")
install.packages("~/Downloads/RcppArmadillo_0.8.500.0.tar.gz", repos = NULL, type = "source")
library(Distances)
library(Distances)
library(GraphAlgorithms)
library(dbtGraphAlgorithms)
library(dbt.GraphAlgorithms)
devtools::install_github("bmschmidt/wordVectors")
aml_raw <- ReadLRN('./Data/13AMLKHd10')
healthy_raw <- ReadLRN('./Data/13PKd10')
library("dbt.DataIO", lib.loc="~/R/win-library/3.4")
library("dbt.DataIO", lib.loc="~/R/win-library/3.4")
aml_raw <- ReadLRN('./Data/13AMLKHd10')
healthy_raw <- ReadLRN('./Data/13PKd10')
healthy_raw <- ReadLRN('./Data/13PKd10')
getwd()
setwd("C:\Users\EdisonZ\Documents\KD_Projekt_1\Data")
setwd("C:/Users/EdisonZ/Documents/KD_Projekt_1/Data/13AMLKHd10")
getwd("C:/Users/EdisonZ/Documents/KD_Projekt_1/Data")
getwd("C:/Users/EdisonZ/Documents/KD_Projekt_1/DbtTools/Distances")
setwd("C:/Users/EdisonZ/Documents/KD_Projekt_1/Data")
aml_raw <- ReadLRN('./Data/13AMLKHd10')
aml_raw <- ReadLRN('./Data/13AMLKHd10')
aml_raw <- ReadLRN('./Data/13AMLKHd10.lrn')
aml_raw <- ReadLRN("13AMLKHd10.lrn', getwd())
scale_adjusted <- apply(data, 2, function (col) {col / max(col)})
scale_adjusted <- apply(data, 2, function (col) {col / max(col)})
logtransformed<-apply(aml_raw,2,function(x){log(x+1)})
dbt_qqnorm(logtransformed[,5])
dbt_qqnorm(logtransformed[,5])
scale_adjusted <- apply(data, 2, function (col) {col / max(col)})
scale_adjusted <- apply(data, 2, function (col) {col / max(col)})
aml_raw$header
aml_raw$header
setwd("C:/Users/EdisonZ/Documents/KD_Projekt_1/Data")
setwd("C:/Users/EdisonZ/Documents/KD_Projekt_1/Data")
aml_raw <- ReadLRN("13AMLKHd10.lrn', getwd())
aml_raw$header
aml_raw <- ReadLRN("13AMLKHd10.lrn', getwd())
setwd("\Users\EdisonZ\Documents\KD_Projekt_1\Data")
setwd("/Users/EdisonZ/Documents/KD_Projekt_1/Data")
aml_raw <- ReadLRN("13AMLKHd10.lrn', getwd())
aml_raw$header
library("dbt.Plot", lib.loc="~/R/win-library/3.4")
library("dbt.ClassAnalysis", lib.loc="~/R/win-library/3.4")
detach("package:dbt.ClassAnalysis", unload=TRUE)
library("devtools", lib.loc="~/R/win-library/3.4")
detach("package:dbt.Plot", unload=TRUE)
setwd("\Users\EdisonZ\Documents\KD_Projekt_1\Data")
setwd("/Users/EdisonZ/Documents/KD_Projekt_1/Data")
aml_raw <-ReadLRN("13AMLKHd10.lrn",getwd())
data <- aml_raw$Data
logtransformed <- apply(data, 2, function (x) {log(x+1)})
dbt_qqnorm(logtransformed[,5])
library("DataVisualizations", lib.loc="~/R/win-library/3.4")
dbt_qqnorm(logtransformed[,5])
library("dbt.general", lib.loc="~/R/win-library/3.4")
library("ggplot2", lib.loc="~/R/win-library/3.4")
dbt_qqnorm(logtransformed[,5])
library("dbt.Plot", lib.loc="~/R/win-library/3.4")
dbt_qqnorm(logtransformed[,5])
aml_raw <- ReadLRN("13AMLKHd10.lrn",getwd())
library("devtools", lib.loc="~/R/win-library/3.4")
library("dbt.DataIO", lib.loc="~/R/win-library/3.4")
aml_raw <- ReadLRN("13AMLKHd10.lrn",getwd())
setwd("C:\Users\EdisonZ\Documents\KD_Projekt_1\Data")
setwd("C:/Users/EdisonZ/Documents/KD_Projekt_1/Data")
aml_raw <- ReadLRN('./Data/13AMLKHd10')
aml_raw <- ReadLRN(13AMLKHd10.Lrn, getwd())
aml_raw <- ReadLRN("13AMLKHd10.Lrn"", getwd())
aml_raw <- ReadLRN("13AMLKHd10.Lrn"", getwd())
aml_raw <- ReadLRN("13AMLKHd10.Lrn", getwd())
library(dbt.DataIO)
aml_raw <- ReadLRN("13AMLKHd10.lrn", getwd())
library("dbt.Plot", lib.loc="~/R/win-library/3.4")
logtransformed <- apply(data, 2, function (x) {log(x+1)})
dbt_qqnorm(logtransformed[,5])
data<-aml_raw$Data
logtransneg_2 <-apply(data,2,function(x){x^-2})
dbt_qqnorm(logtransneg_2[,5])
logtransneg_2 <-apply(data,2,function(x){x^-1})
logtransneg_2 <-apply(data,2,function(x){x^-2})
logtransneg_1 <-apply(data,2,function(x){x^-1})
dbt_qqnorm(logtransneg_1[,5])
logtrans <- apply(data, 2, function (x) {log(x)})
dbt_qqnorm(logtrans[,5])
f(x) <- apply(data, 2, function (x) {x})
fx <- apply(data, 2, function (x) {x})
dbt_qqnorm(fx[,5])
rootsquare <- apply(data, 2, function (x) {x^1/2})
dbt_qqnorm(rootsquare[,5])
dbt_qqnorm(fx[,5])
powersquare <- apply(data, 2, function (x) {x^2})
powerscubic <- apply(data, 2, function (x) {x^3})
dbt_qqnorm(powersquare[,5])
dbt_qqnorm(powercubic[,5])
dbt_qqnorm(powerscubic[,5])
