install.packages('rattle')
install.packages("https://togaware.com/access/rattle_5.0.14.tar.gz", repos=NULL, type="source")
install.packages("https://togaware.com/access/rattle_5.0.14.tar.gz", repos=NULL, type="source")
install.packages("https://cran.r-project.org/src/contrib/Archive/RGtk2/RGtk2_2.20.31.tar.gz", repos=NULL)
install.packages("RGtk2")
trello <- read.csv("~/Code/Python/Trello/trello")
View(trello)
View(trello)
library(plotly)
data <- read.csv("https://raw.githubusercontent.com/plotly/datasets/master/school_earnings.csv")
p <- plot_ly(data, x = ~Women, y = ~Men, text = ~School, type = 'scatter', mode = 'markers',
marker = list(size = ~gap, opacity = 0.5)) %>%
layout(title = 'Gender Gap in Earnings per University',
xaxis = list(showgrid = FALSE),
yaxis = list(showgrid = FALSE))
# Create a shareable link to your chart
# Set up API credentials: https://plot.ly/r/getting-started
chart_link = api_create(p, filename="bubble-simple")
chart_link
install(plotly)
install.packages("plotly")
library(plotly)
Sys.getenv("R_LIBS_USER")
install.packages("plotly")
library(plotly)
read.csv("https://raw.githubusercontent.com/plotly/datasets/master/school_earnings.csv")
p <- plot_ly(data, x = ~Women, y = ~Men, text = ~School, type = 'scatter', mode = 'markers',
marker = list(size = ~gap, opacity = 0.5)) %>%
layout(title = 'Gender Gap in Earnings per University',
xaxis = list(showgrid = FALSE),
yaxis = list(showgrid = FALSE))
# Create a shareable link to your chart
# Set up API credentials: https://plot.ly/r/getting-started
chart_link = api_create(p, filename="bubble-simple")
chart_link
"https://raw.githubusercontent.com/plotly/datasets/master/school_earnings.csv")
gap <-10
p <- plot_ly(data, x = ~Women, y = ~Men, text = ~School, type = 'scatter', mode = 'markers',
marker = list(size = ~gap, opacity = 0.5)) %>%
layout(title = 'Gender Gap in Earnings per University',
xaxis = list(showgrid = FALSE),
yaxis = list(showgrid = FALSE))
# Create a shareable link to your chart
# Set up API credentials: https://plot.ly/r/getting-started
chart_link = api_create(p, filename="bubble-simple")
chart_link
library(plotly)
p <- plot_ly(trello, x = ~importance, y = ~days, type = 'scatter', mode = 'markers',
marker = list(size = ~complexity, opacity = 0.5)) %>%
layout(title = 'Gender Gap in Earnings per University',
xaxis = list(showgrid = FALSE),
yaxis = list(showgrid = FALSE))
p
p <- plot_ly(trello, x = ~days, y = ~importance, type = 'scatter', mode = 'markers',
marker = list(size = ~complexity, opacity = 0.5)) %>%
layout(title = 'Gender Gap in Earnings per University',
xaxis = list(showgrid = FALSE),
yaxis = list(showgrid = FALSE))
ays, y = ~importance, type = 'scatter', mode = 'markers',
marker = list(size = ~complexity, opacity = 0.5)) %>%
layout(title = 'Gender Gap in Earnings per University',
xaxis = list(showgrid = FALSE),
yaxis = list(showgrid = FALSE))
p
View(trello)
View(trello)
trello <- read.csv("~/Code/Python/Trello/trello")
library(plotly)
p <- plot_ly(trello, x = ~days, y = ~importance, type = 'scatter', mode = 'markers',
marker = list(size = ~complexity, opacity = 0.5)) %>%
layout(title = 'Gender Gap in Earnings per University',
xaxis = list(showgrid = FALSE),
yaxis = list(showgrid = FALSE))
p
trello <- read.csv("~/Code/Python/Trello/trello")
library(plotly)
p <- plot_ly(trello, x = ~days, y = ~importance, type = 'scatter', mode = 'markers',
marker = list(size = ~complexity, opacity = 0.5)) %>%
layout(title = 'Gender Gap in Earnings per University',
xaxis = list(showgrid = FALSE),
yaxis = list(showgrid = FALSE))
p
trello.urgency <- days
trello.urgency <- trello.days
trello$urgency <- trello$days
View(trello)
View(trello)
trello$urgency <- trello$days/trello$days.max
trello$urgency <- trello$days/trello$days.max()
trello$urgency <- trello$days/max(trello$days)
View(trello)
View(trello)
trello$urgency <- 1-trello$days/max(trello$days)
p <- plot_ly(trello, x = ~urgency, y = ~importance, type = 'scatter', mode = 'markers',
marker = list(size = ~complexity, opacity = 0.5)) %>%
layout(title = 'Gender Gap in Earnings per University',
xaxis = list(showgrid = FALSE),
yaxis = list(showgrid = FALSE))
p
p <- plot_ly(trello, x = ~urgency, y = ~importance, type = 'scatter', mode = 'markers',
marker = list(size = ~complexity*3, opacity = 0.5)) %>%
layout(title = 'Gender Gap in Earnings per University',
xaxis = list(showgrid = FALSE),
yaxis = list(showgrid = FALSE))
p
p <- plot_ly(trello, x = ~urgency, y = ~importance, type = 'scatter', mode = 'markers',
marker = list(size = ~complexity*3, opacity = 0.5)) %>%
layout(title = 'Priorites',
xaxis = list(showgrid = TRUE),
yaxis = list(showgrid = TRUE))
p
at <- seq(from = 1, to = 3, by = 200000)
axis(side = 1, at = at)
p
p <- plot_ly(trello, x = ~urgency, y = ~importance, type = 'scatter', mode = 'markers',
marker = list(size = ~complexity*3, opacity = 0.5)) %>%
layout(title = 'Priorites',
xaxis = list(showgrid = TRUE),
yaxis = list(showgrid = TRUE))
at <- seq(from = 1, to = 3, by = 200000)
axis(side = 1, at = at)
p
at <- seq(from = 1, to = 3, by = 200000)
axis(side = 1, at = at)
p <- plot_ly(trello, x = ~urgency, y = ~importance, type = 'scatter', mode = 'markers',
marker = list(size = ~complexity*3, opacity = 0.5)) %>%
layout(title = 'Priorites',
xaxis = list(showgrid = TRUE),
yaxis = list(showgrid = TRUE))
p
a <- list(
autotick = FALSE,
ticks = "outside",
tick0 = 0,
dtick = 0.25,
ticklen = 5,
tickwidth = 2,
tickcolor = toRGB("blue")
showgrid = TRUE
)
p <- plot_ly(trello, x = ~urgency, y = ~importance, type = 'scatter', mode = 'markers',
marker = list(size = ~complexity*3, opacity = 0.5)) %>%
layout(title = 'Priorites',
xaxis = list(a),
yaxis = list(a))
p
a <- list(
autotick = FALSE,
ticks = "outside",
tick0 = 0,
dtick = 0.25,
ticklen = 5,
tickwidth = 2,
tickcolor = toRGB("blue")
showgrid = TRUE
)
a <- list(
autotick = FALSE,
ticks = "outside",
tick0 = 0,
dtick = 0.25,
ticklen = 5,
tickwidth = 2,
tickcolor = toRGB("blue"),
showgrid = TRUE
)
p <- plot_ly(trello, x = ~urgency, y = ~importance, type = 'scatter', mode = 'markers',
marker = list(size = ~complexity*3, opacity = 0.5)) %>%
layout(title = 'Priorites',
xaxis = list(a),
yaxis = list(a))
p
a <- list(
autotick = FALSE,
ticks = "outside",
tick0 = 0,
dtick = 1,
ticklen = 5,
tickwidth = 2,
tickcolor = toRGB("blue"),
showgrid = TRUE
)
p <- plot_ly(trello, x = ~urgency, y = ~importance, type = 'scatter', mode = 'markers',
marker = list(size = ~complexity*3, opacity = 0.5)) %>%
layout(title = 'Priorites',
xaxis = list(a),
yaxis = list(a))
p
View(trello)
View(trello)
p <- plot_ly(trello, x = ~urgency, y = ~importance, type = 'scatter', mode = 'markers',
marker = list(size = ~complexity*3, opacity = 0.5)) %>%
layout(title = 'Priorites',
xaxis = list(tickvals=~trello$importance,ticktext=~trello$importance),
yaxis = list(a))
p
p <- plot_ly(trello, x = ~urgency, y = ~importance, type = 'scatter', mode = 'markers',
marker = list(size = ~complexity*3, opacity = 0.5)) %>%
layout(title = 'Priorites',
xaxis = list(tickvals=~trello$importance,ticktext=~trello$importance),
)
p <- plot_ly(trello, x = ~urgency, y = ~importance, type = 'scatter', mode = 'markers',
marker = list(size = ~complexity*3, opacity = 0.5)) %>%
layout(title = 'Priorites',
xaxis = list(tickvals=~trello$importance,ticktext=~trello$importance),
yaxis = list(showgrid = TRUE))
p
p <- plot_ly(trello, x = ~urgency, y = ~importance, type = 'scatter', mode = 'markers',
marker = list(size = ~complexity*3, opacity = 0.5)) %>%
layout(title = 'Priorites',
xaxis = list(showgrid = TRUE)),
yaxis = list(tickvals=~trello$importance,ticktext=~trello$importance)
p
p <- plot_ly(trello, x = ~urgency, y = ~importance, type = 'scatter', mode = 'markers',
marker = list(size = ~complexity*3, opacity = 0.5)) %>%
layout(title = 'Priorites',
xaxis = list(showgrid = TRUE),
yaxis = list(tickvals=~trello$importance,ticktext=~trello$importance))
p
python.load("GetTrello.py")
library(python)
library(rPython)
install.packages("rPython")
library(rPython)
python.load("GetTrello.py")
python.load("~Users/m/code/Python/Trello/GetTrello.py")
python.load("~/Users/m/code/Python/Trello/GetTrello.py")
getwd()
python.load("code/Python/Trello/GetTrello.py")
G
python.load("code/Python/Trello/GetTrello.py")
python.load("code/Python/Trello/GetTrello.py")
library(rPython)
python.load("code/Python/Trello/GetTrello.py")
install.packages("devtools")
library(devtools)
devtools::install_github("aultsch/DataIO")
library(DataIO)
library(aultsch/DataIO)
library('aultsch/DataIO')
library(dbt.DataIO)
install.packages("pandocfilters")
sin(30*pi/180)
source('~/Uni/KD/Ubung_0.R', echo=TRUE)
library(dbt)
?read.socket
c(1,2,3,4)
a
a <- c(1,2,3,4)
a
a[2:4]
trello[,1]
trello[1,]
View(trello)
array(0, c(1,2,3))
array(1, c(1,2,3))
array(1, c(4,15))
is.matrix(a)
a <- array(1, c(4,15))
is.matrix(a)
t(a)
?dbt.DataIO
?dbt
??dbt.DataIO
heatmap(raw_aml)
source('~/Uni/KD/KD_Projekt_1/RScripts/Markus_1.R', echo=TRUE)
apply(raw_aml, 2, function (x) {x / x.max()})
apply(raw_aml, 2, function (x) {x / max(x)})
scale_adjusted_aml <- apply(raw_aml, 2, function (x) {x / max(x)})
heatmap(scale_adjusted_aml)
summarise(raw_aml)
describe(raw_aml)
raw_aml[,2]
raw_aml[,2]/3
max(raw_aml[,2])
heatmap(scale_adjusted_aml, na.rm = FALSE)
heatmap(raw_healthy)
scale_adjusted_healthy <- apply(raw_healthy, 2, function (x) {x / max(x)})
heatmap(scale_adjusted_healthy)
cd_45 <- raw_aml[,0]
View(cd_45)
cd_45 <- raw_aml[,1]
aw_aml[,1]
par(mfrow = c(2, 2))
plot(density.default(cd_45))
hist(cd_45)
qqnorm(cd_45)
boxplot(cd_45)
source('~/Uni/KD/KD_Projekt_1/DbtTools/pareto/example.R', echo=TRUE)
?heatmap
heatmap(c(1,2,3,4,4))
replicate(10, rnorm(20))
heatmap(replicate(10, rnorm(20)))
?heatmap
??heatmap
library(dbt.DataIO)
library(DbtFunc)
library(pareto)
library(AdaptGauss)
library(DataVisualizations)
setwd('/Users/m/uni/KD/KD_Projekt_1/RScripts/')
aml_raw <- ReadLRN('../Data/13AMLKHd10')
healthy_raw <- ReadLRN('../Data/13PKd10')
aml_data <- aml_raw$Data
healthy_data <- healthy_raw$Data
aml_header <- aml_raw$Header
healthy_header <- healthy_raw$Header
scale_adjusted_healthy <- apply(healthy_data, 2, function (col) {col / max(col)})
scale_adjusted_aml <- apply(aml_data, 2, function (col) {col / max(col)})
PlotPixMatrix(scale_adjusted_aml)
getwd()
library(dbt.DataIO)
library(DbtFunc)
library(pareto)
library(AdaptGauss)
#setwd(paste(getwd(),"/../", sep =""))
aml_raw <- ReadLRN('./Data/13AMLKHd10')
healthy_raw <- ReadLRN('./Data/13PKd10')
data <- healthy_raw$Data
header <- healthy_raw$Header
logtransformed <- apply(data, 2, function (x) {log(x+1)})
?qqnorm
qqnorm(logtransformed[,1])
qqnorm(data[,1])
header
qqnorm(data[,5])
qqnorm(data[,4])
qqnorm(data[,6])
qqnorm(data[,4])
qqnorm(data[,5])
dbt_qqnorm(data[,5])
library(DataVisualizations)
library(dbt.Statistics)
library(dbt.Plot)
dbt_qqnorm(data[,5])
dbt_qqnorm(data[,4])
dbt_qqnorm(data[,6])
dbt_qqnorm(data[,3])
dbt_qqnorm(data[,4])
dbt_qqnorm(data[,5])
aml_raw <- ReadLRN('./Data/13AMLKHd10')
healthy_raw <- ReadLRN('./Data/13PKd10')
data <- aml_raw$Data
header <- aml_raw$Header
dbt_qqnorm(data[,5])
logtransformed <- apply(data, 2, function (x) {log(x+1)})
dbt_qqnorm(data[,5])
dbt_qqnorm(logtransformed[,5])
roottransformed <- apply(data, 2, function (x) {x^0.5})
dbt_qqnorm(roottransformed
[,5])
dbt_qqnorm(roottransformed[,5])
header
dbt_qqnorm(logtransformed[,5])
source('~/AdaptGauss.R', echo=TRUE)
source('~/AdaptGauss.R', echo=TRUE)
source('~/AdaptGauss.R', echo=TRUE)
source('~/AdaptGauss.R', echo=TRUE)
source('~/AdaptGauss.R', echo=TRUE)
